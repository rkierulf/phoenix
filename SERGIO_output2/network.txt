ODENet(
  (net_prods): Sequential(
    (activation_0): LogShiftedSoftSignMod()
    (linear_out): Linear(in_features=100, out_features=40, bias=True)
  )
  (net_sums): Sequential(
    (activation_0): SoftsignMod()
    (linear_out): Linear(in_features=100, out_features=40, bias=True)
  )
  (net_alpha_combine): Sequential(
    (linear_out): Linear(in_features=80, out_features=100, bias=False)
  )
)


    def forward(self, t, y):
        sums = self.net_sums(y)
        prods = torch.exp(self.net_prods(y))
        sums_prods_concat = torch.cat((sums, prods), dim= - 1)
        joint = self.net_alpha_combine(sums_prods_concat)
        final = torch.relu(self.gene_multipliers)*(joint-y)
        return(final) 

prior_mat = torch.abs(prior_mat)
lambda at start (first 7 epochs) = 0.9
lambda in middle (upto 20 epochs) = 0.9
and then lambda = 0.9
